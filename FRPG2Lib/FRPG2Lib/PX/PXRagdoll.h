#pragma once
#include "PXEntity.h"
#include "Havok/Havok.h"

struct HavokRagdollData : public DLUT::DLReferenceCountObject {
    DLKR::DLAllocator* m_pAllocator;
    void* field2_0x18;
    int field3_0x20;
    void* m_pHkpPhysicsData; //hkpPhysicsData
    Havok::hkaRagdollInstance* m_pHkaRagdollInstance;
    void* field10_0x38; //hkpSkeletonMapper
    void* field11_0x40; //hkpSkeletonMapper
};

struct PXRagdoll : public PXEntity {
    HavokRagdollData* m_pHavokRagdollData;
    Havok::hkaRagdollInstance* m_pHkaRagdollInstance;
    void* m_pSkeleton;
    void* field4_0x38;
    short field5_0x40;
    short field6_0x42;
    short field7_0x44;
    short field8_0x46;
    short field9_0x48;
    short field10_0x4a;
    short field11_0x4c;
    short field12_0x4e;
    UINT m_groupFilterInfo;
    int field14_0x54;
    int field15_0x58;
    float field16_0x5c;
    HavokRagdollData* m_pHavokPenetrationRagdoll;
    void* m_pHkpAabbPhantom;
    void* m_pHkaDetectRagdollPenetration;
    Havok::hkArray<void*> field20_0x78;
    BYTE field21_0x88;
    BYTE field22_0x89;
    BYTE field23_0x8a;
    BYTE field24_0x8b;
    BYTE field25_0x8c;
    BYTE field26_0x8d;
    BYTE field27_0x8e;
    BYTE field28_0x8f;
    Vector4 field29_0x90;
    Vector4 field30_0xa0;
    Vector4 field31_0xb0;
    Vector4 field32_0xc0;
    BYTE field33_0xd0;
    BYTE field34_0xd1;
    BYTE field35_0xd2;
    BYTE field36_0xd3;
    BYTE field37_0xd4;
    BYTE field38_0xd5;
    BYTE field39_0xd6;
    BYTE field40_0xd7;
    BYTE field41_0xd8;
    BYTE field42_0xd9;
    BYTE field43_0xda;
    BYTE field44_0xdb;
    BYTE field45_0xdc;
    BYTE field46_0xdd;
    BYTE field47_0xde;
    BYTE field48_0xdf;
    Matrix field49_0xe0;
    sPXUserValue m_userValue;
    void* m_pMdlSkeleton;
    void* m_pPXSkeletonMapper;
    BYTE field53_0x140;
    BYTE field54_0x141;
    BYTE field55_0x142;
    BYTE field56_0x143;
    BYTE field57_0x144;
    BYTE field58_0x145;
    BYTE field59_0x146;
    BYTE field60_0x147;
    BYTE field61_0x148;
    BYTE field62_0x149;
    BYTE field63_0x14a;
    BYTE field64_0x14b;
    int field65_0x14c;
    BYTE field66_0x150;
    BYTE field67_0x151;
    BYTE field68_0x152;
    BYTE field69_0x153;
    BYTE field70_0x154;
    BYTE field71_0x155;
    BYTE field72_0x156;
    BYTE field73_0x157;
    BYTE field74_0x158;
    BYTE field75_0x159;
    BYTE field76_0x15a;
    BYTE field77_0x15b;
    BYTE field78_0x15c;
    BYTE field79_0x15d;
    BYTE field80_0x15e;
    BYTE field81_0x15f;
    Vector4 field82_0x160;
    BYTE field83_0x170;
    BYTE field84_0x171;
    BYTE field85_0x172;
    BYTE field86_0x173;
    BYTE field87_0x174;
    BYTE field88_0x175;
    BYTE field89_0x176;
    BYTE field90_0x177;
    BYTE field91_0x178;
    BYTE field92_0x179;
    BYTE field93_0x17a;
    BYTE field94_0x17b;
    BYTE field95_0x17c;
    BYTE field96_0x17d;
    BYTE field97_0x17e;
    BYTE field98_0x17f;
    BYTE field99_0x180;
    BYTE field100_0x181;
    BYTE field101_0x182;
    BYTE field102_0x183;
    BYTE field103_0x184;
    BYTE field104_0x185;
    BYTE field105_0x186;
    BYTE field106_0x187;
    void* m_pAllocator;
    BYTE field108_0x190;
    BYTE field109_0x191;
    BYTE field110_0x192;
    BYTE field111_0x193;
    BYTE field112_0x194;
    BYTE field113_0x195;
    BYTE field114_0x196;
    BYTE field115_0x197;
    BYTE field116_0x198;
    BYTE field117_0x199;
    BYTE field118_0x19a;
    BYTE field119_0x19b;
    BYTE field120_0x19c;
    BYTE field121_0x19d;
    BYTE field122_0x19e;
    BYTE field123_0x19f;
    BYTE field124_0x1a0;
    BYTE field125_0x1a1;
    BYTE field126_0x1a2;
    BYTE field127_0x1a3;
    BYTE field128_0x1a4;
    BYTE field129_0x1a5;
    BYTE field130_0x1a6;
    BYTE field131_0x1a7;
    void* field132_0x1a8;
    BYTE field133_0x1b0;
    BYTE field134_0x1b1;
    BYTE field135_0x1b2;
    BYTE field136_0x1b3;
    BYTE field137_0x1b4;
    BYTE field138_0x1b5;
    BYTE field139_0x1b6;
    BYTE field140_0x1b7;
    BYTE field141_0x1b8;
    BYTE field142_0x1b9;
    BYTE field143_0x1ba;
    BYTE field144_0x1bb;
    BYTE field145_0x1bc;
    BYTE field146_0x1bd;
    BYTE field147_0x1be;
    BYTE field148_0x1bf;
};